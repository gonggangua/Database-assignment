<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.ServerMapper">
    <insert id="insert" parameterType="Server" useGeneratedKeys="true" keyProperty="id" flushCache="true">
        insert into servers(`name`, `creator`, `isPrivate`)
        values(#{name}, #{creator}, #{isPrivate});
    </insert>

    <select id="selectAll" resultType="Server">
        select * from servers
    </select>

    <delete id="dismiss" parameterType="Server">
        delete * from servers
        where id = #{id}
    </delete>

    <select id="selectById" parameterType="int" resultType="Server">
        select * from servers
        where id = #{id}
    </select>

    <select id="selectByName" parameterType="String" resultType="Server">
        select * from servers
        where `name` like '%${name}%'
    </select>

    <select id="selectByAccurateName" parameterType="String" resultType="Server">
        select * from servers
        where `name` = #{name}
    </select>

    <update id="createServerMembers" parameterType="Server" flushCache="true">
        create view `members_${id}` as
        select `userBasicInfo`.*, joiningServer.gname, joiningServer.time from joiningServer, `userBasicInfo`
        where sid = #{id} and uid = `userBasicInfo`.id
    </update>

    <update id="grantServerMembers" parameterType="map" flushCache="true">
        grant select, show view on `members_${sid}` to #{uname}
    </update>

    <update id="update" parameterType="Server">
        update servers
        set `name` = #{name}, `isPrivate` = #{isPrivate}
        where id = #{id}
    </update>

    <select id="getPrivateServer" parameterType="User" resultType="Server">
        select * from servers
        where isPrivate = true and creator = #{id}
    </select>

    <select id="getServerStats" parameterType="Server" resultType="ServerStat" >
        call getServerStats(#{id})
    </select>
</mapper>